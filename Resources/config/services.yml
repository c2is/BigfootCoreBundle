parameters:
    bigfoot.theme.bundle:         "BigfootCoreBundle"
    theme.class:                  "Bigfoot\\Bundle\\CoreBundle\\Theme\\Theme"
    theme.section.toolbar:        "Bigfoot\\Bundle\\CoreBundle\\Theme\\Section\\ToolbarSection"
    theme.section.header:         "Bigfoot\\Bundle\\CoreBundle\\Theme\\Section\\HeaderSection"
    theme.section.sidebar:        "Bigfoot\\Bundle\\CoreBundle\\Theme\\Section\\SidebarSection"
    theme.section.page_header:    "Bigfoot\\Bundle\\CoreBundle\\Theme\\Section\\PageHeaderSection"
    theme.section.page_content:   "Bigfoot\\Bundle\\CoreBundle\\Theme\\Section\\PageContentSection"
    theme.section.footer:         "Bigfoot\\Bundle\\CoreBundle\\Theme\\Section\\FooterSection"
    kernel_listener.class:        "Bigfoot\\Bundle\\CoreBundle\\Listener\\KernelListener"
    route_manager.class:          "Bigfoot\\Bundle\\CoreBundle\\Route\\RouteManager"
    translatable_type.class:      "Bigfoot\\Bundle\\CoreBundle\\Form\\Type\\TranslatedEntityType"
    label_translatable_type.class: "Bigfoot\\Bundle\\CoreBundle\\Form\\Type\\LabelTranslatedEntityType"
    sortable_type.class:          "Bigfoot\\Bundle\\CoreBundle\\Form\\Type\\SortableEntityType"
    available_languages:          [ 'fr', 'en' ]
services:
    # Core controller listener ; used to set page title, breadcrumbs..
    kernel.listener.bigfoot_controller_listener:
        class: Bigfoot\Bundle\CoreBundle\Listener\ControllerListener
        arguments: [@bigfoot.theme]
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }
    # Services dedicated to the BackOffice theme
    bigfoot.theme:
        class:        "%theme.class%"
        arguments:    [@service_container, @bigfoot.section_toolbar, @bigfoot.section_header, @bigfoot.section_sidebar, @bigfoot.section_page_header, @bigfoot.section_page_content, @bigfoot.section_footer]
        calls:
            - [ setTwigNamespace, [ %bigfoot.theme.bundle% ] ]
    bigfoot.section_toolbar:
        class:        "%theme.section.toolbar%"
        arguments:    [@service_container]
        public: false
    bigfoot.section_header:
        class:        "%theme.section.header%"
        arguments:    [@service_container]
        public: false
    bigfoot.section_sidebar:
        class:        "%theme.section.sidebar%"
        arguments:    [@service_container]
        public: false
    bigfoot.section_page_header:
        class:        "%theme.section.page_header%"
        arguments:    [@service_container]
        public: false
    bigfoot.section_page_content:
        class:        "%theme.section.page_content%"
        arguments:    [@service_container]
        public: false
    bigfoot.section_footer:
        class:        "%theme.section.footer%"
        arguments:    [@service_container]
        public: false
    # Route management
    bigfoot.route_manager:
        class:        "%route_manager.class%"
        arguments:    [@service_container]
    # Tags management
    bigfoot.form.type.bigfoot_tag:
        class: Bigfoot\Bundle\CoreBundle\Form\Type\BigfootTagType
        arguments: [ @doctrine.orm.entity_manager ]
        tags:
            - { name: form.type, alias: bigfoot_tag }
    # Entity translation in forms
    form.type.translatable:
        class: %translatable_type.class%
        arguments: [ @service_container, '%available_languages%' ]
        tags:
            - { name: form.type, alias: translatable_entity }
    # Label translation in forms
    form.type.label_translatable:
        class: %label_translatable_type.class%
        arguments: [ @service_container, '%available_languages%' ]
        tags:
            - { name: form.type, alias: label_translatable_entity }
    # Sortable form type
    form.type.sortable:
        class: %sortable_type.class%
        tags:
            - { name: form.type, alias: sortable_entity }
    # Richtext type
    form.type.bigfoot_richtext:
        class: Bigfoot\Bundle\CoreBundle\Form\Type\BigfootRichtextType
        tags:
            - { name: form.type, alias: bigfoot_richtext }
    # Collection item type - to set as parent for entity types used in collections
    bigfoot.form.type.collection_item:
        class: Bigfoot\Bundle\CoreBundle\Form\Type\CollectionItemType
        tags:
            - { name: form.type, alias: bigfoot_collection_item }
    # Allows translations to be stored in database
    bigfoot.translation.database_loader:
        class: Bigfoot\Bundle\CoreBundle\Translation\DatabaseLoader
        arguments: [ @doctrine.orm.entity_manager ]
        tags:
            - { name: translation.loader, alias: db }
    # QuickLink type
    bigfoot.form.type.quicklink:
        class: Bigfoot\Bundle\CoreBundle\Form\QuickLinkType
        arguments: [ @request ]
        calls:
            - [setSecurityContext, ["@security.context"]]
        scope: request
        tags:
            - { name: form.type, alias: bigfoot_bundle_corebundle_quicklinktype }

    # DoshBoardController
    bigfoot.dashboard:
        class: Bigfoot\Bundle\CoreBundle\Controller\DashboardController
        calls:
            - [setContainer, ["@service_container"]]
        tags:
            - { name: bigfoot.dashboard, alias: dashboard }
    # Token generator
    bigfoot_core.generator.token_generator:
        class: Bigfoot\Bundle\CoreBundle\Generator\TokenGenerator
    # Abstract Mailer
    bigfoot_core.mailer.abstract:
        class: Bigfoot\Bundle\CoreBundle\Mailer\AbstractMailer
        abstract:  true
        calls:
            - [setManager, ["@doctrine.orm.entity_manager"]]
            - [setMailer, ["@mailer"]]
            - [setTemplating, ["@templating"]]
            - [setTranslator, ["@translator"]]
            - [setMailFrom, [ "%bigfoot_core.mailer.from%" ]]
    # Menu Builder
    bigfoot_core.menu_builder:
        class: Bigfoot\Bundle\CoreBundle\Menu\Builder
        arguments:
            - @knp_menu.factory
            - @doctrine.orm.entity_manager
            - @security.context
            - @event_dispatcher
    # Menu Factory
    bigfoot_core.menu.main:
        class: Knp\Menu\MenuItem
        factory_service: bigfoot_core.menu_builder
        factory_method: createMainMenu
        scope: request
        arguments:
            - @request
        tags:
            - { name: knp_menu.menu, alias: main }
    # Menu Listener
    bigfoot_core.listener.menu:
        class: Bigfoot\Bundle\CoreBundle\Listener\MenuListener
        tags:
            - { name: kernel.event_subscriber }
